name: 4. Release & Deploy Prod

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true

env:
  GIT_BRANCH: prod
  PROJECT_DIR: /opt/gd-bot
  SSH_HOST: 10.0.6.152
  SSH_PROXY: 144.76.218.59
  SSH_PORT: 22
  SSH_USER: app
  SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  SLACK_CHANNEL: C03PQE4EQ83
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
  SLACK_MESSAGE: "*PROD GD Bot*"
  MERCURE_URL: "https://ghostdrive.com/.well-known/mercure"
  MERCURE_SECRET: ${{ secrets.MERCURE_PUBLISHER_JWT_KEY }}
  MERCURE_TOPIC: "version/prod/gd-bot"

jobs:
  build:
    name: Deploy
    environment: PROD
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Slack Start Notify
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: ${{ env.SLACK_CHANNEL }}
        slack-message: "Build was run on ${{ env.SLACK_MESSAGE }}"

    - name: Get Code
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        port: ${{ env.SSH_PORT }}
        username: ${{ env.SSH_USER }}
        key: ${{ env.SSH_KEY }}
        proxy_host: ${{ env.SSH_PROXY }}
        proxy_port: 22
        proxy_username: ${{ env.SSH_USER }}
        proxy_key: ${{ env.SSH_KEY }}
        script_stop: false
        script: |
          echo "# Getting code"
          cd ${{ env.PROJECT_DIR }}/src
          git tag -l | xargs git tag -d
          git fetch --all
          git reset --hard ${{ inputs.tag }}

          cp .github/docker-compose.yml ../docker-compose.yml

          echo "# Building .env"
          jq -sr '.[0] * .[1] | to_entries[] | .key + "=\"" + (.value | gsub("[\\n]"; "")) + "\""' <(echo '${{ toJson(vars) }}'|jq -r .) <(echo '${{ toJson(secrets) }}'|jq -r .) | sed -e "s/\"/'/g" | grep -v -e 'github_token' -e 'SERVER_SSH_KEY' -e 'SLACK_TOKEN' -e 'MERCURE_SECRET' | tee .env backend/.env frontend/.env > /dev/null

          echo "# Vadidating .env"
          VAR_DIFF=$(comm -13 <(grep -v -e "^$" -e "^#" .env|awk -F '=' '{print $1}'|sort) <(grep -v -e "^$" -e "^#" .env.example|awk -F '=' '{print $1}'|sort))
          if [ ! -z "${VAR_DIFF}" ]; then
              echo "Lack of variables in .env file:"
              echo "$VAR_DIFF"
              exit 1
          else
              echo "Variable file .env is ok"
          fi

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        port: ${{ env.SSH_PORT }}
        username: ${{ env.SSH_USER }}
        key: ${{ env.SSH_KEY }}
        proxy_host: ${{ env.SSH_PROXY }}
        proxy_port: 22
        proxy_username: ${{ env.SSH_USER }}
        proxy_key: ${{ env.SSH_KEY }}
        script_stop: true
        script: |
          cd ${{ env.PROJECT_DIR }}
          echo "# Deploy Front"
          docker compose pull  front
          docker compose build front
          docker compose stop  front
          docker compose up -d front
          echo "# Deploy Back"
          docker compose pull  back
          docker compose build back
          docker compose stop  back
          docker compose up -d back
          docker system prune -af

    - name: Push To Mercure
      run: |
        HEADER=$(echo -n '{"alg":"HS256","typ":"JWT"}' | openssl base64 -e | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        PAYLOAD=$(echo -n '{"mercure":{"publish":["*"]}}' | openssl base64 -e | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        SIGNATURE=$(echo -n "${HEADER}.${PAYLOAD}" | openssl dgst -sha256 -hmac "${{ env.MERCURE_SECRET }}" -binary | base64 | tr -d '=' | tr '/+' '_-')
        curl -s -X POST -H "Authorization: Bearer ${HEADER}.${PAYLOAD}.${SIGNATURE}" -d "topic=${{ env.MERCURE_TOPIC }}&data=1.0" ${{ env.MERCURE_URL }}

    - name: Create Release
      run: |
        if ! curl -s -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/releases | jq .[].tag_name | grep -q ${{ inputs.tag }}; then
            curl -s -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{ github.repository }}/releases -d '{"tag_name":"${{ inputs.tag }}","name":"Release ${{ inputs.tag }}","body":"","draft":false,"prerelease":false,"generate_release_notes":false}'
        fi

    - name: Slack Result Notify
      uses: slackapi/slack-github-action@v1.26.0
      if: always()
      with:
        channel-id: ${{ env.SLACK_CHANNEL }}
        payload: |
          {
            "text": "Build result on ${{ env.SLACK_MESSAGE }}: *${{ job.status }}*\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Build result on ${{ env.SLACK_MESSAGE }}: *${{ job.status }}*\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
          }
