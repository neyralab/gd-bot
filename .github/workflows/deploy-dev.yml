name: 1. Deploy Dev

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  GIT_BRANCH: master
  PROJECT_DIR: /opt/gd-bot
  SSH_HOST: 37.27.5.165
  SSH_PORT: 22
  SSH_USER: ec2-user
  SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  SLACK_CHANNEL: C03PQE4EQ83
  SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
  SLACK_MESSAGE: "*DEV GD Bot*"
  MERCURE_URL: "https://dev.ghostdrive.com/.well-known/mercure"
  MERCURE_SECRET: ${{ secrets.MERCURE_PUBLISHER_JWT_KEY }}
  MERCURE_TOPIC: "version/dev/gd-bot"

jobs:
  build:
    name: Deploy
    environment: DEV
    runs-on: ubuntu-latest
    steps:
    - name: Slack Start Notify
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: ${{ env.SLACK_CHANNEL }}
        slack-message: "Build was run on ${{ env.SLACK_MESSAGE }}"

    - name: Get Code
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        port: ${{ env.SSH_PORT }}
        username: ${{ env.SSH_USER }}
        key: ${{ env.SSH_KEY }}
        script_stop: false
        script: |
          echo "# Getting code"
          cd ${{ env.PROJECT_DIR}}/src
          git fetch --all
          git reset --hard origin/${{ env.GIT_BRANCH }}

          cp .github/docker-compose.yml ../docker-compose.yml
          cp .github/Dockerfile Dockerfile

          echo "# Building .env"
          jq -sr '.[0] * .[1] | to_entries[] | .key + "=\"" + (.value | gsub("[\\n]"; "")) + "\""' <(echo '${{ toJson(vars) }}'|jq -r .) <(echo '${{ toJson(secrets) }}'|jq -r .) | sed -e "s/\"/'/g" | grep -v -e 'SERVER_SSH_KEY' -e 'SLACK_TOKEN' -e 'MERCURE_SECRET:' > .env
          cp .env backup/.env

          echo "# Vadidating .env"
          VAR_DIFF=$(comm -13 <(grep -v -e "^$" -e "^#" .env|awk -F '=' '{print $1}'|sort) <(grep -v -e "^$" -e "^#" .env.example|awk -F '=' '{print $1}'|sort))
          if [ ! -z "${VAR_DIFF}" ]; then
              echo "Lack of variables in .env file:"
              echo "$VAR_DIFF"
              exit 1
          else
              echo "Variable file .env is ok"
          fi
          cp .env backend/.env

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.SSH_HOST }}
        port: ${{ env.SSH_PORT }}
        username: ${{ env.SSH_USER }}
        key: ${{ env.SSH_KEY }}
        script_stop: true
        script: |
          cd ${{ env.PROJECT_DIR }}
          docker system prune -f
          docker-compose -f docker-compose.yml pull
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml down
          docker-compose -f docker-compose.yml up -d

    - name: Push To Mercure
      run: |
        HEADER=$(echo -n '{"alg":"HS256","typ":"JWT"}' | openssl base64 -e | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        PAYLOAD=$(echo -n '{"mercure":{"publish":["*"]}}' | openssl base64 -e | tr -d '=' | tr '/+' '_-' | tr -d '\n')
        SIGNATURE=$(echo -n "${HEADER}.${PAYLOAD}" | openssl dgst -sha256 -hmac "${{ env.MERCURE_SECRET }}" -binary | base64 | tr -d '=' | tr '/+' '_-')
        curl -s -X POST -H "Authorization: Bearer ${HEADER}.${PAYLOAD}.${SIGNATURE}" -d "topic=${{ env.MERCURE_TOPIC }}&data=1.0" ${{ env.MERCURE_URL }}

    - name: Slack Result Notify
      if: always()
      id: slack
      uses: slackapi/slack-github-action@v1.26.0
      with:
        channel-id: ${{ env.SLACK_CHANNEL }}
        payload: |
          {
            "text": "Build result on ${{ env.SLACK_MESSAGE }}: *${{ job.status }}*\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Build result on ${{ env.SLACK_MESSAGE }}: *${{ job.status }}*\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
          }
